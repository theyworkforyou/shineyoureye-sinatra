#!/usr/bin/env ruby

require 'bundler/setup'
require 'everypolitician'
require 'pry'
require 'csv'

require_relative '../lib/mapit/geometry'
require_relative '../lib/mapit/wrapper'
require_relative '../lib/mapit/mappings'

module EveryPolitician
  module LegislativePeriodExtension
    def people
      @people ||= memberships.map(&:person).uniq(&:id)
    end

    def memberships
      @memberships ||= legislature.popolo.memberships.select do |mem|
        mem.legislative_period_id == id
      end
    end
  end
end

# Create a wrapper for the mappings between the various IDs we have
# to use for areas / places.
mapit_mappings = Mapit::Mappings.new(
  parent_mapping_filenames: [
    'mapit/fed_to_sta_area_ids_mapping.csv',
    'mapit/sen_to_sta_area_ids_mapping.csv'
  ],
  pombola_slugs_to_mapit_ids_filename:
    'mapit/pombola_place_slugs_to_mapit.csv',
  mapit_to_ep_areas_filenames: [
    'mapit/mapit_to_ep_area_ids_mapping_FED.csv',
    'mapit/mapit_to_ep_area_ids_mapping_SEN.csv'
  ]
)

# Create a wrapper that caches MapIt and EveryPolitician area data:
mapit = Mapit::Wrapper.new(
  mapit_mappings: mapit_mappings,
  baseurl: '/place/',
  area_types: %w[FED SEN STA],
  data_directory: 'mapit'
)

EveryPolitician::LegislativePeriod.include EveryPolitician::LegislativePeriodExtension

datasource = ENV.fetch('DATASOURCE', 'https://github.com/everypolitician/everypolitician-data/raw/master/countries.json')
index = EveryPolitician::Index.new(index_url: datasource)

representatives = index.country('Nigeria').legislature('Representatives')

latest_term = representatives.legislative_periods.max_by(&:start_date)

people = latest_term.people


# governors: honorific_prefix,name,id,state,party,email,phone,twitter,facebook_url,birth_date,gender,identifier__shineyoureye,image_url,website_url,other_names
person_rows = people.map do |person|
  current_memberships = person.memberships.where(legislative_period_id: latest_term.id)
  ep_area = current_memberships.first.area
  party = current_memberships.first.party
  mapit_area = mapit.area_from_ep_id(ep_area.id)
  {
    id: person.id,
    name: person.name,
    mapit_id: mapit_area&.id,
    party: party.name,
    email: person.email,
    phone: person.phone,
    twitter: person.twitter,
    facebook_url: person.facebook,
    birth_date: person.birth_date,
    gender: person.gender,
    identifier__shineyoureye: person.identifier('shineyoureye'),
    image_url: person.image,
    website_url: person.link('website'),
    other_names: person.other_names.map { |on| on[:name] }.join(';')
  }
end

CSV.open('data/representatives.csv', 'wb') do |csv|
  headers = person_rows.first.keys
  csv << headers
  person_rows.each { |row| csv << row.values_at(*headers) }
end
